#!/bin/bash

# 颜色定义
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# 日志函数
log_info() {
    echo -e "${BLUE}📦 $1${NC}"
}

log_success() {
    echo -e "${GREEN}✅ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}⚠️  $1${NC}"
}

log_error() {
    echo -e "${RED}❌ $1${NC}"
}

log_result() {
    echo -e "${CYAN}📊 $1${NC}"
}

log_step() {
    echo -e "${PURPLE}🚀 $1${NC}"
}

echo -e "${PURPLE}"
echo "=================================================="
echo "              🌈 一键网络测速脚本"
echo "                自动切换备用方案"
echo "=================================================="
echo -e "${NC}"

# 安装必要工具
log_info "安装必要工具..."
apt-get update >/dev/null 2>&1
apt-get install -y curl wget iputils-ping bc dnsutils >/dev/null 2>&1

# 测试网络连通性
log_info "测试网络连接..."
if ping -c 2 -W 3 223.5.5.5 >/dev/null 2>&1; then
    log_success "网络连接正常"
else
    log_error "网络连接失败"
    exit 1
fi

# 尝试官方speedtest
log_step "尝试官方speedtest测速..."
if command -v speedtest &>/dev/null || command -v speedtest-cli &>/dev/null; then
    result=$(speedtest --simple 2>/dev/null || speedtest-cli --simple 2>/dev/null)
    if [ $? -eq 0 ] && [ -n "$result" ]; then
        echo "$result" | sed -E "
            s/Ping:/🔄 网络延迟:/
            s/Download:/⬇️  下载速度:/
            s/Upload:/⬆️  上传速度:/
            s/ ms/ 毫秒/
            s/ Mbit\/s/ Mbit\/秒/
            s/ Gbit\/s/ Gbit\/秒/
        " | while read line; do
            if [[ $line == *"网络延迟"* ]]; then
                echo -e "${CYAN}$line${NC}"
            elif [[ $line == *"下载速度"* ]]; then
                echo -e "${GREEN}$line${NC}"
            elif [[ $line == *"上传速度"* ]]; then
                echo -e "${BLUE}$line${NC}"
            fi
        done
        log_success "官方speedtest测速完成"
        exit 0
    fi
fi

# 安装官方speedtest
log_step "安装官方speedtest..."
if curl -s https://packagecloud.io/install/repositories/ookla/speedtest-cli/script.deb.sh | sudo bash >/dev/null 2>&1; then
    if sudo apt-get install -y speedtest >/dev/null 2>&1; then
        log_success "官方speedtest安装成功"
        result=$(speedtest --simple 2>/dev/null)
        if [ $? -eq 0 ] && [ -n "$result" ]; then
            echo "$result" | sed -E "
                s/Ping:/🔄 网络延迟:/
                s/Download:/⬇️  下载速度:/
                s/Upload:/⬆️  上传速度:/
                s/ ms/ 毫秒/
                s/ Mbit\/s/ Mbit\/秒/
                s/ Gbit\/s/ Gbit\/秒/
            " | while read line; do
                if [[ $line == *"网络延迟"* ]]; then
                    echo -e "${CYAN}$line${NC}"
                elif [[ $line == *"下载速度"* ]]; then
                    echo -e "${GREEN}$line${NC}"
                elif [[ $line == *"上传速度"* ]]; then
                    echo -e "${BLUE}$line${NC}"
                fi
            done
            log_success "官方speedtest测速完成"
            exit 0
        fi
    fi
fi

# 安装非官方speedtest-cli
log_step "安装非官方speedtest-cli..."
if ! command -v speedtest-cli &>/dev/null; then
    if apt-get install -y speedtest-cli >/dev/null 2>&1 || pip3 install speedtest-cli >/dev/null 2>&1; then
        log_success "speedtest-cli安装成功"
    else
        wget -q -O speedtest-cli https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py
        chmod +x speedtest-cli
        mv speedtest-cli /usr/local/bin/ >/dev/null 2>&1
    fi
fi

# 尝试非官方speedtest-cli
if command -v speedtest-cli &>/dev/null; then
    log_step "尝试非官方speedtest-cli测速..."
    result=$(speedtest-cli --simple 2>/dev/null)
    if [ $? -eq 0 ] && [ -n "$result" ]; then
        echo "$result" | sed -E "
            s/Ping:/🔄 网络延迟:/
            s/Download:/⬇️  下载速度:/
            s/Upload:/⬆️  上传速度:/
            s/ ms/ 毫秒/
            s/ Mbit\/s/ Mbit\/秒/
            s/ Gbit\/s/ Gbit\/秒/
        " | while read line; do
            if [[ $line == *"网络延迟"* ]]; then
                echo -e "${CYAN}$line${NC}"
            elif [[ $line == *"下载速度"* ]]; then
                echo -e "${GREEN}$line${NC}"
            elif [[ $line == *"上传速度"* ]]; then
                echo -e "${BLUE}$line${NC}"
            fi
        done
        log_success "非官方speedtest-cli测速完成"
        exit 0
    fi
fi

# 备用测速方法
log_step "切换到备用测速方法..."
start_time=$(date +%s.%N)
if curl -L --max-time 30 --progress-bar -o /dev/null http://cachefly.cachefly.net/100mb.test >/dev/null 2>&1; then
    end_time=$(date +%s.%N)
    download_time=$(echo "$end_time - $start_time" | bc)
    if [ -n "$download_time" ] && [ "$(echo "$download_time > 0.1" | bc -l)" -eq 1 ]; then
        speed_mbps=$(echo "scale=2; (100 * 8) / $download_time" | bc)
        echo -e "${CYAN}🔄 网络延迟: 0.0 毫秒${NC}"
        echo -e "${GREEN}⬇️  下载速度: ${speed_mbps} Mbit/秒${NC}"
        echo -e "${BLUE}⬆️  上传速度: 0.0 Mbit/秒${NC}"
        log_success "备用测速完成"
        exit 0
    fi
fi

# 最终备用方案
log_step "尝试最终备用方案..."
test_urls=(
    "http://speedtest.ftp.otenet.gr/files/test100Mb.db"
    "http://ipv4.download.thinkbroadband.com/100MB.zip"
)

for url in "${test_urls[@]}"; do
    log_info "尝试节点: $(echo $url | cut -d'/' -f3)"
    start_time=$(date +%s.%N)
    if curl -L --max-time 30 -o /dev/null "$url" >/dev/null 2>&1; then
        end_time=$(date +%s.%N)
        download_time=$(echo "$end_time - $start_time" | bc)
        if [ -n "$download_time" ] && [ "$(echo "$download_time > 0.1" | bc -l)" -eq 1 ]; then
            speed_mbps=$(echo "scale=2; (100 * 8) / $download_time" | bc)
            echo -e "${CYAN}🔄 网络延迟: 0.0 毫秒${NC}"
            echo -e "${GREEN}⬇️  下载速度: ${speed_mbps} Mbit/秒${NC}"
            echo -e "${BLUE}⬆️  上传速度: 0.0 Mbit/秒${NC}"
            log_success "最终备用测速完成"
            exit 0
        fi
    fi
done

log_error "所有测速方法都失败了"
