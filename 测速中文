#!/bin/bash

# Á≤æÂáÜÁΩëÁªúÊµãÈÄü‰∏ÄÈîÆËÑöÊú¨
# ÊîØÊåÅÂ§öÁ≥ªÁªüÔºöUbuntu/Debian/CentOS/RHEL/Alpine
# ÂäüËÉΩÔºöÁΩëÁªúËøûÈÄöÊÄßÊµãËØï„ÄÅÂ§öËäÇÁÇπÂª∂ËøüÊµãËØï„ÄÅSpeedtestÊµãÈÄü

# È¢úËâ≤ÂÆö‰πâ
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m'

# ÈîôËØØÂ§ÑÁêÜÂáΩÊï∞
handle_error() {
    echo -e "${RED}‚ùå ÈîôËØØ: $1${NC}"
    exit 1
}

# Ê£ÄÊü•ÂëΩ‰ª§ÊòØÂê¶Â≠òÂú®
check_command() {
    if ! command -v "$1" &> /dev/null; then
        return 1
    fi
    return 0
}

# ÂÆâË£ÖÂøÖË¶ÅÂ∑•ÂÖ∑
install_tools() {
    echo -e "${BLUE}üì¶ Ê£ÄÊü•Âπ∂ÂÆâË£ÖÂøÖË¶ÅÂ∑•ÂÖ∑...${NC}"
    
    # Ê£ÄÊµãÂåÖÁÆ°ÁêÜÂô®
    if check_command apt-get; then
        PM="apt-get"
        UPDATE_CMD="apt-get update"
        INSTALL_CMD="apt-get install -y"
    elif check_command yum; then
        PM="yum"
        UPDATE_CMD="yum update -y"
        INSTALL_CMD="yum install -y"
    elif check_command dnf; then
        PM="dnf"
        UPDATE_CMD="dnf update -y"
        INSTALL_CMD="dnf install -y"
    elif check_command apk; then
        PM="apk"
        UPDATE_CMD="apk update"
        INSTALL_CMD="apk add"
    else
        handle_error "Êú™ÊâæÂà∞ÊîØÊåÅÁöÑÂåÖÁÆ°ÁêÜÂô®"
    fi

    # Êõ¥Êñ∞ÂåÖÂàóË°®
    echo -e "${BLUE}Êõ¥Êñ∞ÂåÖÂàóË°®...${NC}"
    if ! $UPDATE_CMD >/dev/null 2>&1; then
        echo -e "${YELLOW}‚ö†Ô∏è  ÂåÖÂàóË°®Êõ¥Êñ∞Â§±Ë¥•ÔºåÁªßÁª≠ÂÆâË£Ö...${NC}"
    fi

    # ÂÆâË£ÖÂøÖË¶ÅÂ∑•ÂÖ∑
    TOOLS=("curl" "wget" "ping" "bc")
    for tool in "${TOOLS[@]}"; do
        if ! check_command "$tool"; then
            echo -e "${BLUE}ÂÆâË£Ö $tool...${NC}"
            case $tool in
                "ping")
                    if [ "$PM" = "apt-get" ]; then
                        $INSTALL_CMD iputils-ping >/dev/null 2>&1 || echo -e "${YELLOW}‚ö†Ô∏è  iputils-ping ÂÆâË£ÖÂ§±Ë¥•${NC}"
                    elif [ "$PM" = "yum" ] || [ "$PM" = "dnf" ]; then
                        $INSTALL_CMD iputils >/dev/null 2>&1 || echo -e "${YELLOW}‚ö†Ô∏è  iputils ÂÆâË£ÖÂ§±Ë¥•${NC}"
                    elif [ "$PM" = "apk" ]; then
                        $INSTALL_CMD iputils >/dev/null 2>&1 || echo -e "${YELLOW}‚ö†Ô∏è  iputils ÂÆâË£ÖÂ§±Ë¥•${NC}"
                    fi
                    ;;
                "bc")
                    $INSTALL_CMD bc >/dev/null 2>&1 || echo -e "${YELLOW}‚ö†Ô∏è  bc ÂÆâË£ÖÂ§±Ë¥•${NC}"
                    ;;
                *)
                    $INSTALL_CMD "$tool" >/dev/null 2>&1 || echo -e "${YELLOW}‚ö†Ô∏è  $tool ÂÆâË£ÖÂ§±Ë¥•${NC}"
                    ;;
            esac
        fi
    done
}

# ÂÆâË£Öspeedtest
install_speedtest() {
    echo -e "${BLUE}üì¶ Ê£ÄÊü•Âπ∂ÂÆâË£Öspeedtest...${NC}"
    
    # Ê£ÄÊü•ÊòØÂê¶Â∑≤ÂÆâË£Ö
    if check_command speedtest || check_command speedtest-cli; then
        echo -e "${GREEN}‚úÖ speedtest Â∑≤ÂÆâË£Ö${NC}"
        return 0
    fi

    # Â∞ùËØï‰∏çÂêåÁöÑÂÆâË£ÖÊñπÊ≥ï
    echo -e "${BLUE}Â∞ùËØïÂÆâË£Öspeedtest...${NC}"
    
    # ÊñπÊ≥ï1: ‰ΩøÁî®ÂåÖÁÆ°ÁêÜÂô®ÂÆâË£Ö
    if [ "$PM" = "apt-get" ]; then
        if $INSTALL_CMD speedtest-cli >/dev/null 2>&1; then
            echo -e "${GREEN}‚úÖ speedtest-cli ÂÆâË£ÖÊàêÂäü${NC}"
            return 0
        fi
    elif [ "$PM" = "yum" ] || [ "$PM" = "dnf" ]; then
        if $INSTALL_CMD speedtest-cli >/dev/null 2>&1; then
            echo -e "${GREEN}‚úÖ speedtest-cli ÂÆâË£ÖÊàêÂäü${NC}"
            return 0
        fi
    fi

    # ÊñπÊ≥ï2: ‰ΩøÁî®pipÂÆâË£Ö
    if check_command pip3; then
        if pip3 install speedtest-cli >/dev/null 2>&1; then
            echo -e "${GREEN}‚úÖ speedtest-cli pipÂÆâË£ÖÊàêÂäü${NC}"
            return 0
        fi
    elif check_command pip; then
        if pip install speedtest-cli >/dev/null 2>&1; then
            echo -e "${GREEN}‚úÖ speedtest-cli pipÂÆâË£ÖÊàêÂäü${NC}"
            return 0
        fi
    fi

    # ÊñπÊ≥ï3: ‰ΩøÁî®curl‰∏ãËΩΩÂÆòÊñπspeedtest
    if check_command curl; then
        echo -e "${BLUE}Â∞ùËØï‰∏ãËΩΩÂÆòÊñπspeedtest...${NC}"
        if curl -s https://install.speedtest.net/app/cli/install.deb.sh | bash >/dev/null 2>&1; then
            if $INSTALL_CMD speedtest >/dev/null 2>&1; then
                echo -e "${GREEN}‚úÖ ÂÆòÊñπspeedtestÂÆâË£ÖÊàêÂäü${NC}"
                return 0
            fi
        fi
    fi

    # ÊñπÊ≥ï4: ‰ΩøÁî®wget‰∏ãËΩΩspeedtest-cli
    if check_command wget; then
        echo -e "${BLUE}Â∞ùËØïwget‰∏ãËΩΩspeedtest...${NC}"
        if wget -q -O speedtest-cli https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py && \
           chmod +x speedtest-cli && mv speedtest-cli /usr/local/bin/; then
            echo -e "${GREEN}‚úÖ speedtest-cli ‰∏ãËΩΩÂÆâË£ÖÊàêÂäü${NC}"
            return 0
        fi
    fi

    echo -e "${YELLOW}‚ö†Ô∏è  speedtestÂÆâË£ÖÂ§±Ë¥•ÔºåË∑≥ËøáÊµãÈÄüÂäüËÉΩ${NC}"
    return 1
}

# Ê£ÄÊü•Á≥ªÁªüÂÖºÂÆπÊÄß
check_system() {
    echo -e "${BLUE}üîç Ê£ÄÊü•Á≥ªÁªüÁéØÂ¢É...${NC}"
    
    # Ê£ÄÊü•Êìç‰ΩúÁ≥ªÁªü
    if [ -f /etc/os-release ]; then
        . /etc/os-release
        echo -e "${GREEN}‚úÖ Êìç‰ΩúÁ≥ªÁªü: $PRETTY_NAME${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Êó†Ê≥ïÊ£ÄÊµãÊìç‰ΩúÁ≥ªÁªüÁ±ªÂûã${NC}"
    fi

    # Ê£ÄÊü•Êû∂ÊûÑ
    ARCH=$(uname -m)
    echo -e "${GREEN}‚úÖ Á≥ªÁªüÊû∂ÊûÑ: $ARCH${NC}"

    # Ê£ÄÊü•ÂÜÖÊ†∏ÁâàÊú¨
    KERNEL=$(uname -r)
    echo -e "${GREEN}‚úÖ ÂÜÖÊ†∏ÁâàÊú¨: $KERNEL${NC}"
}

# ÁΩëÁªúËøûÈÄöÊÄßÊµãËØï
test_connectivity() {
    echo -e "${BLUE}üåê ÊµãËØïÁΩëÁªúËøûÊé•...${NC}"
    
    # ÊµãËØïÂ§ö‰∏™DNSÊúçÂä°Âô®
    dns_servers=("223.5.5.5" "114.114.114.114" "8.8.8.8" "1.1.1.1")
    connected=false
    
    for dns in "${dns_servers[@]}"; do
        if ping -c 2 -W 3 "$dns" >/dev/null 2>&1; then
            echo -e "${GREEN}‚úÖ ÁΩëÁªúËøûÊé•Ê≠£Â∏∏ (ÈÄöËøá $dns)${NC}"
            connected=true
            break
        fi
    done
    
    if [ "$connected" = false ]; then
        handle_error "ÁΩëÁªúËøûÊé•Â§±Ë¥•ÔºåËØ∑Ê£ÄÊü•ÁΩëÁªúËÆæÁΩÆ"
    fi
}

# Â§öËäÇÁÇπÂª∂ËøüÊµãËØï
test_latency() {
    echo -e "${CYAN}üéØ Â§öËäÇÁÇπÂª∂ËøüÊµãËØï${NC}"
    nodes=("ÈòøÈáåDNS:223.5.5.5" "114DNS:114.114.114.114" "ËÖæËÆØDNS:119.29.29.29" "Cloudflare:1.1.1.1" "Google DNS:8.8.8.8")
    
    for node in "${nodes[@]}"; do
        name="${node%:*}"
        ip="${node#*:}"
        echo -e "${BLUE}ÊµãËØï $name...${NC}"
        
        if ping -c 4 -W 2 "$ip" >/dev/null 2>&1; then
            result=$(ping -c 4 -W 2 "$ip" 2>/dev/null | grep "min/avg/max" | awk -F'/' '{print "  Âπ≥ÂùáÂª∂Ëøü: "$5"ms"}')
            if [ -n "$result" ]; then
                latency=$(echo "$result" | grep -o '[0-9.]*')
                if command -v bc >/dev/null 2>&1 && [ -n "$latency" ]; then
                    if (( $(echo "$latency < 50" | bc -l 2>/dev/null) )); then
                        echo -e "${GREEN}$result ‚úÖ${NC}"
                    elif (( $(echo "$latency < 100" | bc -l 2>/dev/null) )); then
                        echo -e "${GREEN}$result üëç${NC}"
                    elif (( $(echo "$latency < 200" | bc -l 2>/dev/null) )); then
                        echo -e "${YELLOW}$result ‚ö†Ô∏è${NC}"
                    else
                        echo -e "${RED}$result ‚ùå${NC}"
                    fi
                else
                    # Â¶ÇÊûúÊ≤°ÊúâbcÔºåÁÆÄÂçïÊòæÁ§∫ÁªìÊûú
                    echo -e "${GREEN}$result${NC}"
                fi
            else
                echo -e "${YELLOW}  Âª∂ËøüÊµãËØïÁªìÊûúËß£ÊûêÂ§±Ë¥•${NC}"
            fi
        else
            echo -e "${RED}  ÊµãËØïÂ§±Ë¥•${NC}"
        fi
    done
}

# SpeedtestÊµãÈÄü
test_speed() {
    echo -e "${CYAN}üöÄ ËøõË°åSpeedtestÊµãÈÄü...${NC}"
    
    # Ê£ÄÊü•ÊòØÂê¶ÊúâÂèØÁî®ÁöÑspeedtestÂëΩ‰ª§
    SPEEDTEST_CMD=""
    if check_command speedtest; then
        SPEEDTEST_CMD="speedtest --simple"
    elif check_command speedtest-cli; then
        SPEEDTEST_CMD="speedtest-cli --simple"
    elif [ -f /usr/local/bin/speedtest-cli ]; then
        SPEEDTEST_CMD="/usr/local/bin/speedtest-cli --simple"
    fi

    if [ -n "$SPEEDTEST_CMD" ]; then
        echo -e "${BLUE}‰ΩøÁî®ÂëΩ‰ª§: $SPEEDTEST_CMD${NC}"
        result=$($SPEEDTEST_CMD 2>/dev/null)
        
        if [ $? -eq 0 ] && [ -n "$result" ]; then
            echo "$result" | sed -E "
                s/Ping:/üîÑ ÁΩëÁªúÂª∂Ëøü:/
                s/Download:/‚¨áÔ∏è  ‰∏ãËΩΩÈÄüÂ∫¶:/
                s/Upload:/‚¨ÜÔ∏è  ‰∏ä‰º†ÈÄüÂ∫¶:/
                s/ ms/ ÊØ´Áßí/
                s/ Mbit\/s/ Mbit\/Áßí/
            " | while read line; do
                if [[ $line == *"ÁΩëÁªúÂª∂Ëøü"* ]]; then
                    latency=$(echo "$line" | grep -o '[0-9.]*')
                    if command -v bc >/dev/null 2>&1 && [ -n "$latency" ]; then
                        if (( $(echo "$latency < 50" | bc -l 2>/dev/null) )); then
                            echo -e "${GREEN}$line ‚úÖ${NC}"
                        elif (( $(echo "$latency < 100" | bc -l 2>/dev/null) )); then
                            echo -e "${GREEN}$line üëç${NC}"
                        elif (( $(echo "$latency < 200" | bc -l 2>/dev/null) )); then
                            echo -e "${YELLOW}$line ‚ö†Ô∏è${NC}"
                        else
                            echo -e "${RED}$line ‚ùå${NC}"
                        fi
                    else
                        echo -e "${GREEN}$line${NC}"
                    fi
                elif [[ $line == *"‰∏ãËΩΩÈÄüÂ∫¶"* ]]; then
                    speed=$(echo "$line" | grep -o '[0-9.]*')
                    if command -v bc >/dev/null 2>&1 && [ -n "$speed" ]; then
                        if (( $(echo "$speed > 50" | bc -l 2>/dev/null) )); then
                            echo -e "${GREEN}$line üöÄ${NC}"
                        elif (( $(echo "$speed > 10" | bc -l 2>/dev/null) )); then
                            echo -e "${GREEN}$line üëç${NC}"
                        else
                            echo -e "${YELLOW}$line ‚ö†Ô∏è${NC}"
                        fi
                    else
                        echo -e "${GREEN}$line${NC}"
                    fi
                elif [[ $line == *"‰∏ä‰º†ÈÄüÂ∫¶"* ]]; then
                    speed=$(echo "$line" | grep -o '[0-9.]*')
                    if command -v bc >/dev/null 2>&1 && [ -n "$speed" ]; then
                        if (( $(echo "$speed > 20" | bc -l 2>/dev/null) )); then
                            echo -e "${BLUE}$line üöÄ${NC}"
                        elif (( $(echo "$speed > 5" | bc -l 2>/dev/null) )); then
                            echo -e "${BLUE}$line üëç${NC}"
                        else
                            echo -e "${YELLOW}$line ‚ö†Ô∏è${NC}"
                        fi
                    else
                        echo -e "${BLUE}$line${NC}"
                    fi
                fi
            done
        else
            echo -e "${YELLOW}‚ö†Ô∏è  speedtestÊµãÈÄüÂ§±Ë¥•ÔºåË∑≥ËøáÊ≠§ÊµãËØï${NC}"
        fi
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Êú™ÊâæÂà∞speedtestÔºåË∑≥ËøáÊµãÈÄüÂäüËÉΩ${NC}"
        echo -e "${BLUE}üí° ÊèêÁ§∫: ÂèØ‰ª•ÊâãÂä®ÂÆâË£Öspeedtest:${NC}"
        echo -e "${BLUE}  Ubuntu/Debian: apt-get install speedtest-cli${NC}"
        echo -e "${BLUE}  CentOS/RHEL: yum install speedtest-cli${NC}"
        echo -e "${BLUE}  Êàñ‰ΩøÁî®: curl -s https://install.speedtest.net/app/cli/install.deb.sh | sudo bash${NC}"
    fi
}

# ÊòæÁ§∫Á≥ªÁªü‰ø°ÊÅØ
show_system_info() {
    echo -e "${PURPLE}"
    echo "=================================================="
    echo "              üåà Á≤æÂáÜÁΩëÁªúÊµãÈÄüËÑöÊú¨"
    echo "          ÊîØÊåÅ: Ubuntu/Debian/CentOS/RHEL"
    echo "=================================================="
    echo -e "${NC}"
    
    check_system
    echo ""
}

# ÊòæÁ§∫‰ΩøÁî®ËØ¥Êòé
show_usage() {
    echo -e "${GREEN}‰ΩøÁî®ÊñπÊ≥ï:${NC}"
    echo -e "  $0 [ÈÄâÈ°π]"
    echo -e ""
    echo -e "${GREEN}ÈÄâÈ°π:${NC}"
    echo -e "  -h, --help    ÊòæÁ§∫Ê≠§Â∏ÆÂä©‰ø°ÊÅØ"
    echo -e "  -v, --version ÊòæÁ§∫ÁâàÊú¨‰ø°ÊÅØ"
    echo -e ""
    echo -e "${GREEN}ÂäüËÉΩ:${NC}"
    echo -e "  ‚úÖ Á≥ªÁªüÁéØÂ¢ÉÊ£ÄÊµã"
    echo -e "  ‚úÖ Ëá™Âä®ÂÆâË£Ö‰æùËµñÂ∑•ÂÖ∑"
    echo -e "  ‚úÖ ÁΩëÁªúËøûÈÄöÊÄßÊµãËØï"
    echo -e "  ‚úÖ Â§öËäÇÁÇπÂª∂ËøüÊµãËØï"
    echo -e "  ‚úÖ SpeedtestÁΩëÈÄüÊµãËØï"
    echo -e ""
    echo -e "${GREEN}Á§∫‰æã:${NC}"
    echo -e "  $0              # ËøêË°åÂÆåÊï¥ÊµãËØï"
    echo -e "  $0 --help       # ÊòæÁ§∫Â∏ÆÂä©"
}

# ÊòæÁ§∫ÁâàÊú¨‰ø°ÊÅØ
show_version() {
    echo -e "${GREEN}Á≤æÂáÜÁΩëÁªúÊµãÈÄüËÑöÊú¨ v2.0${NC}"
    echo -e "ÊîØÊåÅÂ§öÁ≥ªÁªüÁΩëÁªúÊÄßËÉΩÊµãËØï"
}

# ‰∏ªÂáΩÊï∞
main() {
    # Â§ÑÁêÜÂëΩ‰ª§Ë°åÂèÇÊï∞
    case "${1:-}" in
        -h|--help)
            show_usage
            exit 0
            ;;
        -v|--version)
            show_version
            exit 0
            ;;
        *)
            # Ê≠£Â∏∏ÊâßË°å
            ;;
    esac

    show_system_info
    install_tools
    echo ""
    test_connectivity
    echo ""
    test_latency
    echo ""
    install_speedtest
    echo ""
    test_speed
    echo ""
    
    echo -e "${PURPLE}==================================================${NC}"
    echo -e "${PURPLE}                 ÊµãËØïÂÆåÊàê üåü${NC}"
    echo -e "${PURPLE}==================================================${NC}"
}

# ËÆæÁΩÆÈô∑Èò±ÔºåÁ°Æ‰øùËÑöÊú¨ÈÄÄÂá∫Êó∂ÈáçÁΩÆÈ¢úËâ≤
trap 'echo -e "${NC}"' EXIT

# ËøêË°å‰∏ªÂáΩÊï∞
main "$@"
